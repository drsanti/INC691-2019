"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var CANNON=require("cannon"),THREE=require("three"),OrbitControls=_interopDefault(require("threejs-orbit-controls")),GLTFLoader=_interopDefault(require("three-gltf-loader")),Stats=function(){var e=0,t=document.createElement("div");function s(e){return t.appendChild(e.dom),e}function i(s){for(var i=0;i<t.children.length;i++)t.children[i].style.display=i===s?"block":"none";e=s}t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",function(s){s.preventDefault(),i(++e%t.children.length)},!1);var o=(performance||Date).now(),n=o,a=0,r=s(new Stats.Panel("FPS","#0ff","#002")),h=s(new Stats.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var c=s(new Stats.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:t,addPanel:s,showPanel:i,begin:function(){o=(performance||Date).now()},end:function(){a++;var e=(performance||Date).now();if(h.update(e-o,200),e>=n+1e3&&(r.update(1e3*a/(e-n),100),n=e,a=0,c)){var t=performance.memory;c.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){o=this.end()},domElement:t,setMode:i}};Stats.Panel=function(e,t,s){var i=1/0,o=0,n=Math.round,a=n(window.devicePixelRatio||1),r=80*a,h=48*a,c=3*a,l=2*a,p=3*a,d=15*a,u=74*a,g=30*a,m=document.createElement("canvas");m.width=r,m.height=h,m.style.cssText="width:80px;height:48px";var y=m.getContext("2d");return y.font="bold "+9*a+"px Helvetica,Arial,sans-serif",y.textBaseline="top",y.fillStyle=s,y.fillRect(0,0,r,h),y.fillStyle=t,y.fillText(e,c,l),y.fillRect(p,d,u,g),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p,d,u,g),{dom:m,update:function(h,w){i=Math.min(i,h),o=Math.max(o,h),y.fillStyle=s,y.globalAlpha=1,y.fillRect(0,0,r,d),y.fillStyle=t,y.fillText(n(h)+" "+e+" ("+n(i)+"-"+n(o)+")",c,l),y.drawImage(m,p+a,d,u-a,g,p,d,u-a,g),y.fillRect(p+u-a,d,a,g),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p+u-a,d,a,n((1-h/w)*g))}}};var graphics_config={scene:{type:"fog",fog:{near:3,far:100,color:16772812,usePlane:!0},gridHelper:{size:500,divisions:500,majorColor:8947848,minorColor:3355443,transparent:!0,opacity:.2},axesHelper:{size:1,position:new THREE.Vector3(0,0,0)}},camera:{position:new THREE.Vector3(5,8,20),lookAt:new THREE.Vector3(0,0,0),Fov:45,Near:.1,Far:1e3},renderer:{antialias:!0,alpha:!0},lights:{ambientLights:[{name:"AmbientLight-1",enabled:!0,color:16777215,intensity:.5,castShadow:!1}],pointLights:[{name:"PointLight-1",enabled:!0,showHelper:!1,color:16777215,power:20,position:new THREE.Vector3(5,10,-5),distance:50,castShadow:!0,mapSize:2048,shadowBias:2e-5,shadowCameraNear:1,shadowCameraFar:85,shadowCameraFov:100,shadowCameraVisible:!1},{name:"PointLight-2",enabled:!1,showHelper:!0,color:13434828,power:20,position:new THREE.Vector3(5,5,5),distance:50,castShadow:!0,mapSize:2048,shadowBias:2e-5,shadowCameraNear:1,shadowCameraFar:85,shadowCameraFov:100,shadowCameraVisible:!1}],directionalLights:[{name:"DirectLight-1",enabled:!1,showHelper:!0,color:16777215,position:new THREE.Vector3(-20,15,5),intensity:1,castShadow:!0,mapSize:2048,shadowBias:2e-5}],spotLights:[{name:"SpotLight-1",enabled:!1,showHelper:!0,color:16777215,intensity:1,position:new THREE.Vector3(-20,15,1),angle:Math.PI/3,distance:100,penumbra:.8,decay:2,castShadow:!0,mapSize:2048,shadowBias:2e-5,shadowCameraNear:1,shadowCameraFar:85,shadowCameraFov:100,shadowCameraVisible:!1}]}};console.log("%cgraphics engine v0.3 loaded","color:#338833");class Graphics{constructor(e){this.config=graphics_config,this.options=void 0===e?{}:e,this.options.useControls=void 0===this.options.useControls||this.options.useControls,this.options.useStats1=void 0===this.options.useStats1||this.options.useStats1,this.options.useStats2=void 0===this.options.useStats2||this.options.useStats2,this.options.useStats3=void 0===this.options.useStats3||this.options.useStats3,this.options.useReflection=null==this.options.useReflection||this.options.useReflection,this.options.useGrids=null==this.options.useGrids||this.options.useGrids,this.options.useAxes=null==this.options.useAxes||this.options.useAxes,this.sceneType=void 0===this.options.sceneType?graphics_config.scene.type:this.options.sceneType,this.enabled=!0,this.lights={}}init(){if(this.initScene(),this.initCamera(),this.initRenderer(),this.initControls(),this.initStats(),this.initAmbientLights(),this.initSpotLights(),this.initDirectionalLights(),this.initPointLights(),window.addEventListener("resize",()=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)},!1),this.options.useGrids){var e=graphics_config.scene.gridHelper;const t=new THREE.GridHelper(e.size,e.divisions,e.majorColor,e.minorColor);t.material.opacity=e.opacity,t.material.transparent=e.transparent,this.scene.add(t)}if(this.options.useAxes){e=graphics_config.scene.axesHelper;const t=new THREE.AxesHelper(e.size);t.position.copy(e.position),this.scene.add(t)}return this.update(),this}initScene(){var e=graphics_config.scene;if(this.scene=new THREE.Scene,"fog"==this.sceneType){if(this.scene.fog=new THREE.Fog(e.fog.color,e.fog.near,e.fog.far),this.scene.fog.name="EccFog",this.scene.background=this.scene.fog.color,e.fog.usePlane){const e=new THREE.Mesh(new THREE.PlaneBufferGeometry(2e5,2e5),new THREE.MeshPhongMaterial({color:1118481,depthWrite:!1}));e.name="FogPlane",e.rotation.x=-Math.PI/2,e.receiveShadow=!1,this.scene.add(e)}}else"env"===this.sceneType?console.log("sceneType: env"):(this.scene.background=new THREE.Color(.1,.1,.1),console.log("sceneType: basic"));return this}initCamera(){var e=graphics_config.camera;return this.camera=new THREE.PerspectiveCamera(e.Fov,window.innerWidth/window.innerHeight,e.Near,e.Far),this.camera.position.copy(e.position),this.camera.lookAt(e.lookAt),this}initRenderer(){var e=graphics_config.renderer;return this.renderer=new THREE.WebGLRenderer({antialias:e.antialias,alpha:e.alpha}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.gammaInput=!0,this.renderer.gammaOutput=!0,this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.soft=!0,this.renderer.shadowMap.type=THREE.PCFSoftShadowMap,document.body.appendChild(this.renderer.domElement),this}initControls(){return this.options.useControls&&(this.controls=new OrbitControls(this.camera),this.controls.keys={}),this}initStats(){this.options.useStats1&&(this.stats1=new Stats,this.stats1.showPanel(0),document.body.appendChild(this.stats1.dom),this.stats1.dom.style.cssText="position:absolute;bottom:0;left:0;cursor:pointer;opacity:0.5;z-index:10000"),this.options.useStats2&&(this.stats2=new Stats,this.stats2.showPanel(1),document.body.appendChild(this.stats2.dom),this.stats2.dom.style.cssText="position:absolute;bottom:0;left:82px;cursor:pointer;opacity:0.5;z-index:10000"),this.options.useStats3&&(this.stats3=new Stats,this.stats3.showPanel(2),document.body.appendChild(this.stats3.dom),this.stats3.dom.style.cssText="position:absolute;bottom:0;left:164px;cursor:pointer;opacity:0.5;z-index:10000")}initAmbientLights(){var e=graphics_config.lights.ambientLights;this.lights.ambientLights=[];for(var t=0;t<e.length;t++){var s=e[t];s.enabled&&(this.lights.ambientLights[t]=new THREE.AmbientLight(s.color,s.intensity),this.lights.ambientLights[t].name=s.name,this.lights.ambientLights[t].castShadow=s.castShadow,this.scene.add(this.lights.ambientLights[t]))}return this}initSpotLights(){var e=graphics_config.lights.spotLights;this.lights.spotLights=[],this.spotLightHelpers=[];for(var t=0;t<e.length;t++){var s=e[t];if(s.enabled){var i=new THREE.SpotLight(s.color);i.intensity=s.intensity,i.position.copy(s.position),i.castShadow=s.castShadow,i.shadow.mapSize.width=s.mapSize,i.shadow.mapSize.height=s.mapSize,i.angle=s.angle||Math.PI/3,i.distance=s.distance,i.penumbra=s.penumbra,i.decay=s.decay,i.shadow.bias=s.shadowBias||2e-6,i.shadow.camera.near=s.shadowCameraNear,i.shadow.camera.Far=s.shadowCameraFar,i.shadow.camera.Fov=s.shadowCameraFov,i.shadow.camera.visible=s.shadowCameravisible,s.showHelper&&(this.spotLightHelpers[t]=new THREE.SpotLightHelper(i),this.scene.add(this.spotLightHelpers[t])),this.scene.add(i),this.lights.spotLights[t]=i}}return this}initDirectionalLights(){var e=graphics_config.lights.directionalLights;this.lights.directionalLights=[],this.directionalLightHelpers=[];for(var t=0;t<e.length;t++){var s=e[t];if(s.enabled){var i=new THREE.DirectionalLight(s.color);i.intensity=s.intensity,i.position.copy(s.position),i.castShadow=s.castShadow,i.shadow.mapSize.width=s.mapSize,i.shadow.mapSize.height=s.mapSize,i.shadow.camera=new THREE.OrthographicCamera(-100,100,100,-100,.5,1e3),s.showHelper&&(this.directionalLightHelpers[t]=new THREE.DirectionalLightHelper(i),this.scene.add(this.directionalLightHelpers[t])),this.scene.add(i),this.lights.directionalLights[t]=i}}return this}initPointLights(){var e=graphics_config.lights.pointLights;this.lights.pointLights=[],this.pointLightHelpers=[];for(var t=0;t<e.length;t++){var s=e[t];if(s.enabled){var i=new THREE.PointLight(s.color);i.power=s.power,i.castShadow=s.castShadow,i.position.copy(s.position),i.shadow.mapSize.width=s.mapSize,i.shadow.mapSize.height=s.mapSize,i.distance=s.distance,i.angle=s.angle,i.shadow.bias=s.shadowBias,i.shadow.camera.near=s.shadowCameraNear,i.shadow.camera.Far=s.shadowCameraFar,i.shadow.camera.Fov=s.shadowCameraFov,i.shadow.camera.visible=s.shadowCameraVisible,s.showHelper&&(this.pointLightHelpers[t]=new THREE.PointLightHelper(i,.2,s.color),this.scene.add(this.pointLightHelpers[t])),this.scene.add(i),this.lights.pointLights[t]=i}}return this}update(){if(!1!==this.enabled)return this.options.useControls&&this.controls.update(),this.options.useStats1&&this.stats1.update(),this.options.useStats2&&this.stats2.update(),this.options.useStats3&&this.stats3.update(),this.renderer.render(this.scene,this.camera),this}start(){return this.enabled=!0,this}stop(){return this.enabled=!1,this}}console.log("%cmesh debugger v0.3 loaded","color:#338833");class Debugger{constructor(e,t,s){s=s||{},this.scene=e,this.world=t,this.visibled=!0,this._meshes=[],this._material=new THREE.MeshBasicMaterial({color:s.color||13421568,wireframe:!0}),this._sphereGeometry=new THREE.SphereGeometry(1),this._boxGeometry=new THREE.BoxGeometry(1,1,1),this._planeGeometry=new THREE.PlaneGeometry(10,10,10,10),this._cylinderGeometry=new THREE.CylinderGeometry(1,1,10,10),this.tmpVec0=new CANNON.Vec3,this.tmpVec1=new CANNON.Vec3,this.tmpVec2=new CANNON.Vec3,this.tmpQuat0=new CANNON.Vec3}update(){for(var e=this.world.bodies,t=this._meshes,s=this.tmpVec0,i=this.tmpQuat0,o=0,n=0;n!==e.length;n++)for(var a=e[n],r=0;r!==a.shapes.length;r++){var h=a.shapes[r];this._updateMesh(o,h),(c=t[o])&&(a.quaternion.vmult(a.shapeOffsets[r],s),a.position.vadd(s,s),a.quaternion.mult(a.shapeOrientations[r],i),c.position.copy(s),c.quaternion.copy(i)),o++}for(n=o;n<t.length;n++){var c;(c=t[n])&&this.scene.remove(c)}return t.length=o,this}_updateMesh(e,t){var s=this._meshes[e];this._typeMatch(s,t)||(s&&this.scene.remove(s),s=this._meshes[e]=this._createMesh(t)),this._scaleMesh(s,t)}_typeMatch(e,t){if(!e)return!1;var s=e.geometry;return s instanceof THREE.SphereGeometry&&t instanceof CANNON.Sphere||s instanceof THREE.BoxGeometry&&t instanceof CANNON.Box||s instanceof THREE.PlaneGeometry&&t instanceof CANNON.Plane||s.id===t.geometryId&&t instanceof CANNON.ConvexPolyhedron||s.id===t.geometryId&&t instanceof CANNON.Trimesh||s.id===t.geometryId&&t instanceof CANNON.Heightfield}_createMesh(e){var t,s=this._material;switch(e.type){case CANNON.Shape.types.SPHERE:t=new THREE.Mesh(this._sphereGeometry,s);break;case CANNON.Shape.types.BOX:t=new THREE.Mesh(this._boxGeometry,s);break;case CANNON.Shape.types.PLANE:t=new THREE.Mesh(this._planeGeometry,s);break;case CANNON.Shape.types.CONVEXPOLYHEDRON:for(var i=new THREE.Geometry,o=0;o<e.vertices.length;o++){var n=e.vertices[o];i.vertices.push(new THREE.Vector3(n.x,n.y,n.z))}for(o=0;o<e.faces.length;o++)for(var a=e.faces[o],r=a[0],h=1;h<a.length-1;h++){var c=a[h],l=a[h+1];i.faces.push(new THREE.Face3(r,c,l))}i.computeBoundingSphere(),i.computeFaceNormals(),t=new THREE.Mesh(i,s),e.geometryId=i.id;break;case CANNON.Shape.types.TRIMESH:var p=new THREE.Geometry,d=this.tmpVec0,u=this.tmpVec1,g=this.tmpVec2;for(o=0;o<e.indices.length/3;o++){e.getTriangleVertices(o,d,u,g),p.vertices.push(new THREE.Vector3(d.x,d.y,d.z),new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(g.x,g.y,g.z));h=p.vertices.length-3;p.faces.push(new THREE.Face3(h,h+1,h+2))}p.computeBoundingSphere(),p.computeFaceNormals(),t=new THREE.Mesh(p,s),e.geometryId=p.id;break;case CANNON.Shape.types.HEIGHTFIELD:p=new THREE.Geometry,d=this.tmpVec0,u=this.tmpVec1,g=this.tmpVec2;for(var m=0;m<e.data.length-1;m++)for(var y=0;y<e.data[m].length-1;y++)for(var w=0;w<2;w++){e.getConvexTrianglePillar(m,y,0===w),d.copy(e.pillarConvex.vertices[0]),u.copy(e.pillarConvex.vertices[1]),g.copy(e.pillarConvex.vertices[2]),d.vadd(e.pillarOffset,d),u.vadd(e.pillarOffset,u),g.vadd(e.pillarOffset,g),p.vertices.push(new THREE.Vector3(d.x,d.y,d.z),new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(g.x,g.y,g.z));o=p.vertices.length-3;p.faces.push(new THREE.Face3(o,o+1,o+2))}p.computeBoundingSphere(),p.computeFaceNormals(),t=new THREE.Mesh(p,s),e.geometryId=p.id}return t&&(t.name="___mesh_debug___"+Math.floor(1e10*Math.random()),this.scene.add(t)),t}_scaleMesh(e,t){switch(t.type){case CANNON.Shape.types.SPHERE:var s=t.radius;e.scale.set(s,s,s);break;case CANNON.Shape.types.BOX:e.scale.copy(t.halfExtents),e.scale.multiplyScalar(2);break;case CANNON.Shape.types.CONVEXPOLYHEDRON:e.scale.set(1,1,1);break;case CANNON.Shape.types.TRIMESH:e.scale.copy(t.scale);break;case CANNON.Shape.types.HEIGHTFIELD:e.scale.set(1,1,1)}}setVisible(e){const t=this;this.visibled=!0===e||!1===e?e:this.visibled,this.scene.traverse(e=>{e instanceof THREE.Mesh&&e.name.includes("___mesh_debug___")&&(e.visible=t.visibled)})}toggleVisible(){this.visibled=!this.visibled,this.setVisible(this.visibled)}}var physics_config={solver:{iterations:5,tolerance:1e-5}};console.log("%cphysics engine v0.3 loaded","color:#338833");class Physics{constructor(e,t){this.config=physics_config,this.options=void 0===t?{}:t,this.options.useDebug=void 0!==this.options.useDebug&&this.options.useDebug,this.options.debugColor=void 0===this.options.debugColor?65331:this.options.debugColor,this.options.debugFactor=void 0===this.options.debugFactor?.01:this.options.debugFactor,this.options.timeStep=void 0===this.options.timeStep?"dt":this.options.timeStep,this.options.gravity=void 0===this.options.gravity?new CANNON.Vec3(0,-9.8,0):this.options.gravity,this.graphics=e,this.timeStep=this.options.timeStep,this.gravity=this.options.gravity,this.debugFactor=this.options.debugFactor,this.enabled=!0}init(){return this.world=new CANNON.World,this.world.gravity=this.gravity,this.world.broadphase=new CANNON.NaiveBroadphase,this.world.solver.iterations=this.config.solver.iterations,this.world.solver.tolerance=this.config.solver.tolerance,console.log(this.world),this.world.quatNormalizeFast=!0,this.world.quatNormalizeSkip=0,this.debugRenderer=new Debugger(this.graphics.scene,this.world,{color:this.options.debugColor}),this}createPhysicsFromScene(e){const t=this;e.traverse(e=>{e instanceof THREE.Group?(t.debug&&console.log("\tMultipleMaterialMesh name: "+e.name," children: "+e.children.length),t.createBodyFromMesh(e)):e instanceof THREE.Mesh&&e.parent instanceof THREE.Scene&&(t.debug&&console.log("SingleMaterialMesh name: "+e.name),t.createBodyFromMesh(e))})}changeBodyToStatic(e){e.type=CANNON.Body.STATIC,e.mass=0,e.updateMassProperties(),e.aabbNeedsUpdate=!0}getMass(e){const t=e.name.toLowerCase();return t.includes("static")||t.includes("ground")?0:(e.scale.x+e.scale.y+e.scale.z)/3}createBodyFromMesh(e){const t=this.getMass(e),s=e.name.toLowerCase();s.includes("cube")||s.includes("box")?this.createBoxBody(e,t):s.includes("sphere")|s.includes("icosphere")?this.createSphereBody(e,t):s.includes("cylinder")?this.createCylinderBody(e,t):s.includes("cone")&&this.createConeBody(e,t)}createBoxBody(e,t){const s=this.debugFactor,i=new CANNON.Vec3(e.scale.x+s,e.scale.y+s,e.scale.z+s),o=new CANNON.Box(i),n=new CANNON.Body({mass:t});n.addShape(o),n.quaternion.copy(e.quaternion),n.position.copy(e.position),n.threemesh=e,this.world.add(n)}createSphereBody(e,t){const s=this.debugFactor,i=e.scale.x+3*s,o=new CANNON.Sphere(i),n=new CANNON.Body({mass:t});n.addShape(o),n.quaternion.copy(e.quaternion),n.position.copy(e.position),n.threemesh=e,this.world.add(n)}createCylinderBody(e,t){const s=this.debugFactor,i=e.scale.x,o=i,n=2*e.scale.y,a=new CANNON.Cylinder(i+s,o+s,n+s,16);var r=new CANNON.Quaternion;r.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),a.transformAllPoints(new CANNON.Vec3,r);const h=new CANNON.Body({mass:t});h.addShape(a),h.quaternion.copy(e.quaternion),h.position.copy(e.position),h.threemesh=e,this.world.add(h)}createConeBody(e,t){const s=this.debugFactor,i=e.scale.x,o=2*e.scale.y,n=new CANNON.Cylinder(.001+s,i+s,o+s,16);var a=new CANNON.Quaternion;a.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),n.transformAllPoints(new CANNON.Vec3,a);const r=new CANNON.Body({mass:t});r.addShape(n),r.quaternion.copy(e.quaternion),r.position.copy(e.position),r.threemesh=e,this.world.add(r)}update(e){if(!1===this.enabled)return this;if("dt"===this.timeStep){var t=e/1e3;t>.2&&(console.log("%cThe dt="+t+" > 0.2 seconds. It is changed to 0.06","color:#885511"),t=.06),this.world.step(t)}else this.world.step(this.timeStep);var s=[];if(this.world.bodies.forEach(e=>{null!=e.threemesh&&(e.threemesh.position.copy(e.position),e.threemesh.quaternion.copy(e.quaternion),e.position.y<-100&&s.push(e))}),this.options.useDebug&&this.debugRenderer.update(),s.length>0){for(var i=null,o=0;o<this.graphics.scene.children.length;o++){var n=this.graphics.scene.children[o];if(n instanceof THREE.Scene){i=n;break}}s.forEach(e=>{this.world.remove(e),i.remove(e.threemesh),console.log("%cThe "+e.threemesh.name+" is removed","color:#883333")})}return this}start(){return this.enabled=!0,this}stop(){return this.enabled=!1,this}}console.log("%cmodel/texture loader v0.3 loaded","color:#338833");class Loader{constructor(e){this.options=e||{}}loadGLTF(e,t){var s=t||{};return new Promise((t,i)=>{const o=new GLTFLoader;o.crossOrigin="anonymous",o.load(e,e=>{e.scene.traverse(e=>{e instanceof THREE.Mesh&&(e.receiveShadow=!0,e.castShadow=!0,s.reflectionCube&&s.reflectionCube instanceof THREE.CubeTexture&&(e.material.envMap=s.reflectionCube))}),t(e)},e=>{},t=>{i("Error: The model "+e+" cannot be downloaded!")})})}loadCubeTexture(e,t){var s=t||{};return new Promise((t,i)=>{const o=(new THREE.CubeTextureLoader).setPath(e);o.crossOrigin="anonymous";const n=s.urls||["posx.jpg","negx.jpg","posy.jpg","negy.jpg","posz.jpg","negz.jpg"];o.load(n,e=>{e.format=s.format||THREE.RGBAFormat,t(e)},e=>{},t=>{i("Error: The texture "+e+" cannot be downloaded!")})})}applyReflection(e,t){var s=[];return new Promise((i,o)=>{e.traverse(e=>{e instanceof THREE.Mesh&&t instanceof THREE.CubeTexture&&(e.material.envMap=t,s.push(e))}),i(s)})}}var engine_config={graphics:{sceneType:"env",useGridsHelper:!0,useAxesHelper:!0}};console.log("%cecc-cgp-engine v0.3 loaded","color:#338833");class Engine{constructor(e){this.config=engine_config,this.options=void 0===e?{}:e,this.options.useControls=void 0===this.options.useControls||this.options.useControls,this.options.useStats1=void 0===this.options.useStats1||this.options.useStats1,this.options.useStats2=void 0===this.options.useStats2||this.options.useStats2,this.options.useStats3=void 0===this.options.useStats3||this.options.useStats3,this.options.sceneType=void 0===this.options.sceneType?engine_config.graphics.sceneType:this.options.sceneType,this.options.useReflection=null==this.options.useReflection||this.options.useReflection,this.options.useGrids=void 0===this.options.useGrids?engine_config.graphics.useGridsHelper:this.options.useGrids,this.options.useAxes=void 0===this.options.useAxes?engine_config.graphics.useAxesHelper:this.options.useAxes,this.options.usePhysics=void 0===this.options.usePhysics||this.options.usePhysics,this.options.useDebug=void 0!==this.options.useDebug&&this.options.useDebug,this.options.debugColor=void 0===this.options.debugColor?65331:this.options.debugColor,this.options.debugFactor=void 0===this.options.debugFactor?.02:this.options.debugFactor,this.options.timeStep=void 0===this.options.timeStep?"dt":this.options.timeStep,this.options.gravity=void 0===this.options.gravity?new CANNON.Vec3(0,-9.8,0):this.options.gravity,this.graphics=new Graphics({sceneType:this.options.sceneType,useControls:this.options.useControls,useStats1:this.options.useStats1,useStats2:this.options.useStats2,useStats3:this.options.useStats3,useReflection:this.options.useReflection,useGrids:this.options.useGrids,useAxes:this.options.useAxes}),this.physics=new Physics(this.graphics,{useDebug:this.options.useDebug,debugColor:this.options.debugColor,debugFactor:this.options.debugFactor,timeStep:this.options.timeStep,gravity:this.options.gravity}),this.graphics.init(),this.physics.init(),this.physics.enabled=this.options.usePhysics,this.enabled=!0,this.callback=null,this.params={dt:0,curTime:Date.now(),prvTime:Date.now(),prgTime:0,frameCnt:0}}init(e){return new Promise((t,s)=>{console.group("Engine.init: ");var i=void 0===e?{}:e;this.options.envPath=void 0===i.envPath?"./images/Park2/":i.envPath,this.options.modelPath=void 0===i.modelPath?"./models/scene.gltf":i.modelPath;let o=this;void 0!==this.options.envPath&&void 0!==this.options.modelPath?o.loadEnvironment(this.options.envPath).then(e=>{o.setSceneEnvironment(e),o.print("Scene background is loaded","success"),o.loadModel(this.options.modelPath).then(s=>{o.print(s.children.length+" meshes is loaded","success"),o.setReflectionMap(e),console.groupEnd(),t({graphics:o.graphics,physics:o.physics,scene:s.scene,texture:e})}).catch(e=>{s(e)})}).catch(e=>{s(e)}):void 0!==this.options.envPath?o.loadEnvironment(this.options.envPath).then(e=>{o.graphics.setSceneEnvironment(e),console.groupEnd(),t({graphics:o.graphics,physics:o.physics,scene:null,texture:e})}).catch(e=>{s(e)}):void 0!==this.options.modelPath?o.loadModel(this.options.modelPath).then(e=>{console.groupEnd(),t({graphics:o.graphics,physics:o.physics,scene:e.scene,texture:null})}).catch(e=>{s(e)}):(console.groupEnd(),t({graphics:o.graphics,physics:o.physics,model:null,texture:null}))})}loadEnvironment(e,t){return new Promise((s,i)=>{let o=new Loader;var n=this;o.loadCubeTexture(e).then(e=>{!0!==t&&n.setSceneEnvironment(e),s(e)}).catch(e=>{i(e)})})}setSceneEnvironment(e){return this.graphics.envTexture=e,"env"===this.graphics.sceneType&&(this.graphics.scene.background=e),this.setReflectionMap(e),this}setReflectionMap(e){return!0!==this.graphics.options.useReflection?this:(this.graphics.scene.traverse(t=>{t instanceof THREE.Mesh&&(t.material.envMap=e)}),this)}loadModel(e){return new Promise((t,s)=>{console.group("Engine.loadModel: ");let i=this;(new Loader).loadGLTF(e).then(e=>{i.print("Add "+e.scene.children.length+" meshes to the scene","info"),i.graphics.scene.add(e.scene),i.physics.enabled&&(i.print("Create rigid bodies of the "+e.scene.children.length+" meshes","info"),i.physics.createPhysicsFromScene(i.graphics.scene)),console.groupEnd(),t(e.scene)}).catch(e=>{s(e)})})}update(){return!0===this.enabled&&(window.requestAnimationFrame(this.update.bind(this)),this.params.curTime=Date.now(),this.params.dt=this.params.curTime-this.params.prvTime,this.physics.update(this.params.dt),this.graphics.update(),this.params.frameCnt++,this.callback&&this.callback(this.params),this.params.prgTime=Date.now()-this.params.curTime,this.params.prvTime=this.params.curTime),this}start(e){return this.enabled=!0,this.callback=e,requestAnimationFrame(this.update.bind(this)),this}stop(){return this.enabled=!1,this}print(e,t){var s="#000000";switch(t){case"info":s="#3333AA";break;case"success":s="#33AA33";break;case"danger":s="#AA3333";break;case"warning":s="#AAAA33";break;case"primary":s="#333388";break;default:s=t}return console.log("%c"+e,s),this}clearConsole(){return console.clear(),this}getMeshByName(e){var t=[];return this.graphics.scene.traverse(s=>{s.name===e&&(s instanceof THREE.Mesh||s instanceof THREE.Group)&&t.push(s)}),t.length>1&&console.warning("Engine: Found + "+t.length+" meshes. Only the first mesh is returned"),t[0]}getObjectByName(e){var t=[];return this.graphics.scene.traverse(s=>{s.name===e&&s instanceof THREE.Object3D&&t.push(s)}),t.length>1&&console.warning("Engine: Found + "+t.length+" objects. Only the first object is returned"),t[0]}getBodyByMeshName(e){var t=[],s=this.physics.world.bodies;for(let i=0;i<s.length;i++){const o=s[i];o.threemesh.name.toLowerCase()===e.toLowerCase()&&t.push(o)}return t.length>1&&console.warning("Engine: Found + "+t.length+" bodies. Only the first body is returned"),t[0]}getMeshesFromScene(){const e=[];return this.graphics.scene.traverse(t=>{t instanceof THREE.Mesh&&t.name&&e.push(t)}),e}getMeshesFromWorld(){const e=[];return this.physics.world.bodies.forEach(t=>{t.threemesh.traverse(t=>{t instanceof THREE.Mesh&&(t.parent instanceof THREE.Group?e.push(t.parent):e.push(t))})}),e}changeBodyToStatic(e){return e.type=CANNON.Body.STATIC,e.mass=0,e.updateMassProperties(),e.aabbNeedsUpdate=!0,this}debugPrintBodies(){console.group("Current Bodies");var e=physics.world.bodies;for(let t=0;t<e.length;t++){const s=e[t];console.log(s.threemesh.name)}return console.groupEnd(),this}addAxesToMesh(e,t){if(e.children){var s=!1;for(let t=0;t<e.children.length;t++)if(e.children[t]instanceof THREE.LineSegments){s=!0;break}if(!s){var i=t;i||(i=(i=e.scale.x>e.scale.y?e.scale.x:e.scale.y)>e.scale.z?i:e.scale.z);var o=new THREE.AxesHelper(t||2);e.add(o)}return this}}removeAxesFromMesh(e){var t=void 0;for(let s=0;s<e.children.length;s++)if(e.children[s]instanceof THREE.LineSegments){t=e.children[s];break}return t&&e.remove(t),this}addAxesHelperToAllMeshes(e){return this.graphics.scene.traverse(t=>{t instanceof THREE.Mesh&&this.addAxesToMesh(t,e)}),this}removeAxesHelperFromAllMeshes(){return this.graphics.scene.traverse(e=>{e instanceof THREE.Mesh&&this.removeAxesFromMesh(e)}),this}setGravity(e){return this.physics.world.gravity=e,this}on(e,t){return window.addEventListener(e,e=>{e.preventDefault(),e.stopPropagation(),t(e)}),this}createGroundMaterial(e,t){var s=new CANNON.Material("__physicGroundMaterial"),i=new CANNON.ContactMaterial(s,s,{friction:null!=e?e:.4,restitution:null!=t?t:0});return this.physics.world.addContactMaterial(i),s}createObjectMaterial(e,t,s){var i=new CANNON.Material("__physicObjectMaterial"),o=new CANNON.ContactMaterial(s,i,{friction:null!=e?e:0,restitution:null!=t?t:.9});return this.physics.world.addContactMaterial(o),i}}console.log("%craycaster v0.3 loaded","color:#338833");class RayCast{constructor(e,t){this.graphics=e,this.physics=t,this.callback=null,this.meshes=[],this.raycaster=new THREE.Raycaster}doRayCast(e){const t=new THREE.Vector2;t.x=+e.clientX/this.graphics.renderer.domElement.clientWidth*2-1,t.y=-e.clientY/this.graphics.renderer.domElement.clientHeight*2+1,this.meshes.length<1&&(this.meshes=this.getMeshesFromScene());var s=[];if(this.meshes.length>1){this.raycaster.setFromCamera(t,this.graphics.camera);let e=this.raycaster.intersectObjects(this.meshes);console.group("RayCast.doRayCast"),console.dir(this.raycaster);for(let t=0;t<e.length;t++){const i=e[t].object;console.dir(e[t]),i.parent instanceof THREE.Group?s.push({mesh:i.parent,intersect:e[t],ray:this.raycaster.ray}):s.push({mesh:i,intersect:e[t],ray:this.raycaster.ray})}console.groupEnd()}return s}updateScene(){this.meshes=getMeshesFromScene()}getMeshesFromScene(e){const t=e||this.graphics.scene,s=this.meshes;return t.traverse(e=>{e instanceof THREE.Mesh&&e.name&&s.push(e)}),this.meshes}getMeshesFromWorld(e){const t=e||this.physics.world,s=this.meshes;return t.bodies.forEach(e=>{e.threemesh.traverse(e=>{e instanceof THREE.Mesh&&e.name&&s.push(e)})}),this.meshes}}class KeyEvent{constructor(e){this.down=!1,this.key=e,this.keyCode=void 0,this.target=void 0,this.shift=!1,this.ctrl=!1,this.alt=!1,this.repeat=!1,this.timeOld=performance.now(),this.timeNew=0,this.timeDif=0,this.timeSum=0}}console.log("%ckeyboaed v0.1 is loaded!","color: #338833");class Keyboard{constructor(e,t){this.options=t||{},this.callback=e||null,this.event=new KeyEvent(""),this.keyDownList=[],document.addEventListener("keydown",e=>{var t=!1;for(let s=0;s<this.keyDownList.length;s++)if(this.keyDownList[s].key===e.key){t=!0;break}if(!t){var s=new KeyEvent(e.key);_updateParams(s,e,!0),this.keyDownList.push(s)}this.callback&&(_updateParams(this.event,e,!0),this.callback(this.event))}),document.addEventListener("keyup",e=>{var t=-1;for(let s=0;s<this.keyDownList.length;s++)if(this.keyDownList[s].key===e.key){t=s;break}t>=0&&this.keyDownList.splice(t,1),this.callback&&(_updateParams(this.event,e,!1),this.callback(this.event))})}setCallback(e){this.callback=e}getKeyDown(e,t){for(let i=0;i<this.keyDownList.length;i++){var s=this.keyDownList[i];if(s.key===e)return!t||Number(performance.now()-s.timeNew)<Number(t)}return!1}}function _updateParams(e,t,s){e.down=s,e.key=t.key,e.keyCode=t.keyCode,e.shift=t.shiftKey,e.ctrl=t.ctrlKey,e.alt=t.altKey,e.repeat=t.repeat,e.target=t.target,e.timeOld=e.timeNew,e.timeNew=performance.now(),e.timeDif=s?e.timeNew-e.timeOld:0,e.timeSum=s?e.timeSum+e.timeDif:0}var eccCgpEngine={Engine:Engine};exports.CANNON=CANNON,exports.THREE=THREE,exports.default=eccCgpEngine,exports.Engine=Engine,exports.RayCast=RayCast,exports.Graphics=Graphics,exports.Physics=Graphics,exports.Keyboard=Keyboard;
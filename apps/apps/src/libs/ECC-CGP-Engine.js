"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var CANNON=require("cannon"),THREE=require("three"),OrbitControls=_interopDefault(require("threejs-orbit-controls")),GLTFLoader=_interopDefault(require("three-gltf-loader")),Stats=function(){var e=0,t=document.createElement("div");function s(e){return t.appendChild(e.dom),e}function i(s){for(var i=0;i<t.children.length;i++)t.children[i].style.display=i===s?"block":"none";e=s}t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",function(s){s.preventDefault(),i(++e%t.children.length)},!1);var o=(performance||Date).now(),a=o,r=0,n=s(new Stats.Panel("FPS","#0af","#001")),h=s(new Stats.Panel("MS","#0f0","#121"));if(self.performance&&self.performance.memory)var p=s(new Stats.Panel("MB","#f0f","#212"));return i(0),{REVISION:16,dom:t,addPanel:s,showPanel:i,begin:function(){o=(performance||Date).now()},end:function(){r++;var e=(performance||Date).now();if(h.update(e-o,200),e>=a+1e3&&(n.update(1e3*r/(e-a),100),a=e,r=0,p)){var t=performance.memory;p.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){o=this.end()},domElement:t,setMode:i}};Stats.Panel=function(e,t,s){var i=1/0,o=0,a=Math.round,r=a(window.devicePixelRatio||1),n=80*r,h=48*r,p=3*r,c=2*r,l=3*r,d=15*r,m=74*r,g=30*r,u=document.createElement("canvas");u.width=n,u.height=h,u.style.cssText="width:80px;height:48px";var w=u.getContext("2d");return w.font="bold "+9*r+"px Helvetica,Arial,sans-serif",w.textBaseline="top",w.fillStyle=s,w.fillRect(0,0,n,h),w.fillStyle=t,w.fillText(e,p,c),w.fillRect(l,d,m,g),w.fillStyle=s,w.globalAlpha=.9,w.fillRect(l,d,m,g),{dom:u,update:function(h,O){i=Math.min(i,h),o=Math.max(o,h),w.fillStyle=s,w.globalAlpha=1,w.fillRect(0,0,n,d),w.fillStyle=t,w.fillText(a(h)+" "+e+" ("+a(i)+"-"+a(o)+")",p,c),w.drawImage(u,l+r,d,m-r,g,l,d,m-r,g),w.fillRect(l+m-r,d,r,g),w.fillStyle=s,w.globalAlpha=.9,w.fillRect(l+m-r,d,r,a((1-h/O)*g))}}};class HelperUtils{constructor(e){this.graphics=e}createAmbientLight(e){e=e||{};const t=new THREE.AmbientLight(this.parseOption(e.color,16777215));return t.intensity=this.parseOption(e.intensity,1),t.castShadow=this.parseOption(e.castShadow,!1),t.name=this.parseOption(e.name,this.generateLightName("AmbiebtLight")),t}addAmbientLight(e){e=e||{};const t=this.createAmbientLight(e);this.graphics.scene.add(t)}addPointLight(e){e=e||{};const t=this.createPointLight(e);if(this.graphics.scene.add(t),e.useHelper){const e=this.createPointLightHelper(t,{});this.graphics.scene.add(e)}}createPointLight(e){e=e||{};const t=new THREE.PointLight(this.parseOption(e.color,16777215));return t.name=this.parseOption(e.name,this.generateLightName("PointLight")),t.position.copy(this.parseOption(e.position,new THREE.Vector3(5,20,5))),t.intensity=this.parseOption(e.intensity,1),t.castShadow=this.parseOption(e.castShadow,!0),t.distance=this.parseOption(e.distance,50),t.decay=this.parseOption(e.decay,2),e.shadow=this.parseOption(e.shadow,{}),t.shadow.bias=this.parseOption(e.shadow.bias,0),e.shadow.mapSize=this.parseOption(e.shadow.mapSize,{}),t.shadow.mapSize.width=this.parseOption(e.shadow.mapSize.width,1024),t.shadow.mapSize.height=this.parseOption(e.shadow.mapSize.height,1024),e.shadow.camera=this.parseOption(e.shadow.camera,{}),t.shadow.camera.visible=this.parseOption(e.shadow.visible,!0),t.shadow.camera.Fov=this.parseOption(e.shadow.Fov,90),t.shadow.camera.near=this.parseOption(e.shadow.near,.5),t.shadow.camera.far=this.parseOption(e.shadow.far,1e3),t}createPointLightHelper(e,t){const s=new THREE.PointLightHelper(e,this.parseOption(t.size,.2),this.parseOption(t.color,e.color));return s.name=e.name+"-Helper",s}addSpotLight(e){e=e||{};const t=this.createSpotLight(e);if(this.graphics.scene.add(t),e.useHelper){const e=this.createSpotLightHelper(t,{});this.graphics.scene.add(e)}}createSpotLight(e){e=e||{};const t=new THREE.SpotLight(this.parseOption(e.color,16777215));return t.name=this.parseOption(e.name,this.generateLightName("SpotLight")),t.position.copy(this.parseOption(e.position,new THREE.Vector3(5,10,5))),t.intensity=this.parseOption(e.intensity,1),t.castShadow=this.parseOption(e.castShadow,!0),t.distance=this.parseOption(e.distance,500),t.decay=this.parseOption(e.decay,2),t.angle=this.parseOption(e.angle,Math.PI/4),t.penumbra=this.parseOption(e.penumbra,.8),e.shadow=this.parseOption(e.shadow,{}),t.shadow.bias=this.parseOption(e.shadow.bias,1e-4),e.shadow.mapSize=this.parseOption(e.shadow.mapSize,{}),t.shadow.mapSize.width=this.parseOption(e.shadow.mapSize.width,1024),t.shadow.mapSize.height=this.parseOption(e.shadow.mapSize.height,1024),e.shadow.camera=this.parseOption(e.shadow.camera,{}),t.shadow.camera.visible=this.parseOption(e.shadow.camera.visible,!0),t.shadow.camera.Fov=this.parseOption(e.shadow.camera.Fov,90),t.shadow.camera.near=this.parseOption(e.shadow.camera.near,.5),t.shadow.camera.far=this.parseOption(e.shadow.camera.far,1e3),t}createSpotLightHelper(e,t){const s=new THREE.SpotLightHelper(e,this.parseOption(t.color,e.color));return s.name=e.name+"-Helper",s}addDirectionalLight(e){e=e||{};const t=this.createDirectionalLight(e);if(this.graphics.scene.add(t),e.useHelper){const e=this.createDirectionalLightHelper(t,{});this.graphics.scene.add(e);const s=new THREE.CameraHelper(t.shadow.camera);this.graphics.scene.add(s)}}createDirectionalLight(e){e=e||{};const t=new THREE.DirectionalLight(this.parseOption(e.color,16777215));return t.name=this.parseOption(e.name,this.generateLightName("DirectionalLight")),t.position.copy(this.parseOption(e.position,new THREE.Vector3(5,50,5))),t.intensity=this.parseOption(e.intensity,1),t.castShadow=this.parseOption(e.castShadow,!0),e.shadow=this.parseOption(e.shadow,{}),t.shadow.bias=this.parseOption(e.shadow.bias,0),e.shadow.mapSize=this.parseOption(e.shadow.mapSize,{}),t.shadow.mapSize.width=this.parseOption(e.shadow.mapSize.width,1024),t.shadow.mapSize.height=this.parseOption(e.shadow.mapSize.height,1024),e.shadow.camera=this.parseOption(e.shadow.camera,{}),t.shadow.camera.visible=this.parseOption(e.shadow.camera.visible,!0),t.shadow.camera.near=this.parseOption(e.shadow.camera.near,.5),t.shadow.camera.far=this.parseOption(e.shadow.camera.far,1e3),t.shadow.camera.top=this.parseOption(e.shadow.camera.top,10),t.shadow.camera.bottom=this.parseOption(e.shadow.camera.bottom,-10),t.shadow.camera.right=this.parseOption(e.shadow.camera.right,10),t.shadow.camera.left=this.parseOption(e.shadow.camera.left,-10),console.log(t),t}createDirectionalLightHelper(e,t){const s=new THREE.DirectionalLightHelper(e,this.parseOption(t.size,1),this.parseOption(t.color,e.color));return s.name=e.name+"-Helper",s}parseOption(e,t){return null==e?t:e}generateLightName(e){return e+"-"+Math.floor(1e6*Math.random())}}class MeshUtils{constructor(e){this.graphics=e,this.BODY_SCALE=2}createBox(e,t){e=e||{};const s=new THREE.BoxBufferGeometry(this.parseOption(e.width,1)*this.BODY_SCALE,this.parseOption(e.height,1)*this.BODY_SCALE,this.parseOption(e.depth,1)*this.BODY_SCALE,this.parseOption(e.widthSegments,1),this.parseOption(e.heightSegments,1),this.parseOption(e.depthSegments,1)),i=this.parseOption(t,new THREE.MeshPhongMaterial({color:this.parseOption(e.color,3377203)})),o=new THREE.Mesh(s,i);return o.name=this.parseOption(e.name,this.generateMeshName("Box")),o.castShadow=!0,o.receiveShadow=!0,o}addBox(e,t){const s=this.createBox(e,t);return this.setLocationFromProperties(s,e),this.setRotationFromProperties(s,e),this.graphics.scene.add(s),s}generateMeshName(e){return e+"-"+Math.floor(1e6*Math.random())}createSphere(e,t){e=e||{};const s=new THREE.SphereBufferGeometry(this.parseOption(e.radius,1),this.parseOption(e.widthSegments,16),this.parseOption(e.heightSegments,16),this.parseOption(e.phiStart,0),this.parseOption(e.phiLength,2*Math.PI),this.parseOption(e.thetaStart,0),this.parseOption(e.thetaLength,Math.PI)),i=this.parseOption(t,new THREE.MeshPhongMaterial({color:this.parseOption(e.color,8926003)})),o=new THREE.Mesh(s,i);return o.castShadow=!0,o.name=this.parseOption(e.name,this.generateMeshName("Sphere")),o.receiveShadow=!0,o}addSphere(e,t){const s=this.createSphere(e,t);return this.graphics.scene.add(s),this.setLocationFromProperties(s,e),this.setRotationFromProperties(s,e),s}createCylinder(e,t){e=e||{};const s=new THREE.CylinderBufferGeometry(this.parseOption(e.radiusTop,1),this.parseOption(e.radiusBottom,1),this.parseOption(e.height,1)*this.BODY_SCALE,this.parseOption(e.radialSegments,16),this.parseOption(e.heightSegments,1),this.parseOption(e.openEnded,!1),this.parseOption(e.thetaStart,0),this.parseOption(e.thetaLength,2*Math.PI)),i=this.parseOption(t,new THREE.MeshPhongMaterial({color:this.parseOption(e.color,3355528)})),o=new THREE.Mesh(s,i);return o.castShadow=!0,o.receiveShadow=!0,o.name=this.parseOption(e.name,this.generateMeshName("Cylinder")),o}addCylinder(e,t){const s=this.createCylinder(e,t);return this.graphics.scene.add(s),this.setLocationFromProperties(s,e),this.setRotationFromProperties(s,e),s}createIcosahedron(e,t){e=e||{};const s=new THREE.IcosahedronBufferGeometry(this.parseOption(e.radius,1),this.parseOption(e.detail,0)),i=this.parseOption(t,new THREE.MeshPhongMaterial({color:this.parseOption(e.color,8926088)})),o=new THREE.Mesh(s,i);return o.castShadow=!0,o.receiveShadow=!0,o.name=this.parseOption(e.name,this.generateMeshName("Icosahedron")),o}addIcosahedron(e,t){const s=this.createIcosahedron(e,t);return this.graphics.scene.add(s),this.setLocationFromProperties(s,e),this.setRotationFromProperties(s,e),s}createCone(e,t){e=e||{};const s=new THREE.ConeBufferGeometry(this.parseOption(e.radius,1),this.parseOption(e.height,1)*this.BODY_SCALE,this.parseOption(e.radialSegments,16),this.parseOption(e.heightSegments,1),this.parseOption(e.openEnded,!1),this.parseOption(e.thetaStart,0),this.parseOption(e.thetaLength,2*Math.PI)),i=this.parseOption(t,new THREE.MeshPhongMaterial({color:this.parseOption(e.color,8947763)})),o=new THREE.Mesh(s,i);return o.castShadow=!0,o.receiveShadow=!0,o.name=this.parseOption(e.name,this.generateMeshName("Cone")),o}addCone(e,t){const s=this.createCone(e,t);return this.graphics.scene.add(s),this.setLocationFromProperties(s,e),this.setRotationFromProperties(s,e),s}createTorus(e,t){e=e||{};const s=new THREE.TorusBufferGeometry(this.parseOption(e.radius,1),this.parseOption(e.tube,.4),this.parseOption(e.radialSegments,16),this.parseOption(e.tubularSegments,16),this.parseOption(e.arc,2*Math.PI)),i=this.parseOption(t,new THREE.MeshPhongMaterial({color:this.parseOption(e.color,8947763)})),o=new THREE.Mesh(s,i);return o.castShadow=!0,o.receiveShadow=!0,o.name=this.parseOption(e.name,this.generateMeshName("Torus")),o}addTorus(e,t){const s=this.createTorus(e,t);return this.graphics.scene.add(s),this.setLocationFromProperties(s,e),this.setRotationFromProperties(s,e),s}createTorusKnot(e,t){e=e||{};const s=new THREE.TorusKnotBufferGeometry(this.parseOption(e.radius,1),this.parseOption(e.tube,.4),this.parseOption(e.tubularSegments,64),this.parseOption(e.radialSegments,8),this.parseOption(e.p,2),this.parseOption(e.q,3)),i=this.parseOption(t,new THREE.MeshPhongMaterial({color:this.parseOption(e.color,8947763)})),o=new THREE.Mesh(s,i);return o.castShadow=!0,o.receiveShadow=!0,o.name=this.parseOption(e.name,this.generateMeshName("TorusKnot")),o}addTorusKnot(e,t){const s=this.createTorusKnot(e,t);return this.graphics.scene.add(s),this.setLocationFromProperties(s,e),this.setRotationFromProperties(s,e),s}createPlane(e,t){e=e||{};const s=new THREE.PlaneBufferGeometry(this.parseOption(e.width,1),this.parseOption(e.height,1),this.parseOption(e.widthSegments,1),this.parseOption(e.heightSegments,1)),i=this.parseOption(t,new THREE.MeshPhongMaterial({color:this.parseOption(e.color,8947848)})),o=new THREE.Mesh(s,i);return o.castShadow=!0,o.receiveShadow=!0,o.name=this.parseOption(e.name,this.generateMeshName("Plane")),o}addPlane(e,t){const s=this.createPlane(e,t);return this.graphics.scene.add(s),this.setLocationFromProperties(s,e),this.setRotationFromProperties(s,e),s}applyReflectionMapToAllMeshes(e){this.graphics.scene.traverse(t=>{t instanceof THREE.Mesh&&(t.name.includes("Helper")||t.name.includes("GroundPlaneStatic")||t.name.includes("___mesh_debug___")||(t.material.envMap=e,t.material.needsUpdate=!0))})}removeReflectionMapFromAllMeshes(){this.applyReflectionMapToAllMeshes(void 0)}applyReflectionMapToMesh(e,t){e.traverse(e=>{e instanceof THREE.Mesh&&(e.name.includes("Helper")||(e.material.envMap=t,e.material.needsUpdate=!0))})}removeReflectionMapFromMesh(e){this.applyReflectionMapToMesh(e,void 0)}getAllMeshes(){const e=[];return this.graphics.scene.traverse(function(t){(t instanceof THREE.Mesh||t instanceof THREE.Group)&&t.parent instanceof THREE.Scene&&e.push(t)}),e}getMeshByName(e){const t=this.getAllMeshes();for(var s=0;s<t.length;s++)if(t[s].name===e)return t[s]}addAxesToMesh(e,t){if(e.children){var s=!1;for(let t=0;t<e.children.length;t++)if(e.children[t]instanceof THREE.LineSegments){s=!0;break}if(!s){var i=t;i||(i=(i=e.scale.x>e.scale.y?e.scale.x:e.scale.y)>e.scale.z?i:e.scale.z);var o=new THREE.AxesHelper(this.parseOption(t,1));e.add(o)}return this}}removeAxesFromMesh(e){var t=void 0;for(let s=0;s<e.children.length;s++)if(e.children[s]instanceof THREE.LineSegments){t=e.children[s];break}return t&&e.remove(t),this}addAxesToAllMeshes(e){const t=this;return this.graphics.scene.traverse(s=>{s instanceof THREE.Mesh&&t.addAxesToMesh(s,t.parseOption(e,1))}),this}removeAxesFromAllMeshes(){const e=this;return this.graphics.scene.traverse(t=>{t instanceof THREE.Mesh&&e.removeAxesFromMesh(t)}),this}parseOption(e,t){return null==e?t:e}setLocationFromProperties(e,t){return t.position=t.position||{},e.position.set(this.parseOption(t.position.x,0),this.parseOption(t.position.y,1),this.parseOption(t.position.z,0)),this}setRotationFromProperties(e,t){return t.rotation=t.rotation||{},e.rotation.set(this.parseOption(t.rotation.x,0),this.parseOption(t.rotation.y,0),this.parseOption(t.rotation.z,0)),this}print(e,t){var s="#000000";switch(t){case"info":s="#3333AA";break;case"success":s="#33AA33";break;case"danger":s="#AA3333";break;case"warning":s="#AAAA33";break;case"primary":s="#333388";break;default:s=t}return console.log("%c"+e,"color:"+s),this}analiseMeshes(e){var t="#33aa33",s=0;console.group("%cMeshUtils.analiseMeshes()","color:"+t),e||(e=this.getAllMeshes()),e.forEach(e=>{if((e instanceof THREE.Mesh||e instanceof THREE.Group)&&e.parent instanceof THREE.Scene){"Mesh"==e.type?t=e.name.includes("Helper")?"#888888":"#338833":"Group"==e.type&&(t="#3333aa"),console.log("%c"+ ++s+") "+e.type+": "+e.name+", #children: "+e.children.length,"color:"+t);var i=0;e.children.forEach(e=>{console.log("%c   "+s+"."+ ++i+") "+e.type+": "+e.name+", #children: "+e.children.length,"color:#555588");var t=0;e.children.forEach(e=>{console.log("%c        "+s+"."+i+"."+ ++t+") "+e.type+": "+e.name+", #children: "+e.children.length,"color:#666699")})})}}),console.groupEnd()}}class Loader{constructor(e){this.options=e||{}}loadGLTF(e,t){return new Promise((s,i)=>{const o=new GLTFLoader;o.crossOrigin="anonymous",o.load(e,e=>{e.scene.traverse(e=>{e instanceof THREE.Mesh&&(e.receiveShadow=!0,e.castShadow=!0),(e instanceof THREE.Mesh||e instanceof THREE.Group)&&e.name.toLowerCase().includes("collider")&&(e.visible=!1)}),s(e),t&&t(e)},e=>{},t=>{i("Error: The GLTF model "+e+" cannot be downloaded!")})})}loadCubeTexture(e){return new Promise((t,s)=>{e||t(void 0),e+="/"!==e[e.length-1]?"/":"";const i=(new THREE.CubeTextureLoader).setPath(e);i.crossOrigin="anonymous";i.load(["posx.jpg","negx.jpg","posy.jpg","negy.jpg","posz.jpg","negz.jpg"],e=>{e.format=THREE.RGBAFormat,t(e)},e=>{},t=>{s("Error: The CubeTexture "+e+" cannot be downloaded!")})})}}class HelperUtils$1{constructor(e){this.graphics=e}addGrids(e){e=e||{};const t=new THREE.GridHelper(this.parseOption(e.size,40),this.parseOption(e.divisions,40),this.parseOption(e.colorCenterLine,2105376),this.parseOption(e.colorGrid,1381653));t.name="MainGridHelper",t.opacity=this.parseOption(e.opacity,.5),t.material.transparent=t.opacity<1,e.position=e.position||{},t.position.x=this.parseOption(e.position.x,0),t.position.y=this.parseOption(e.position.y,.001),t.position.z=this.parseOption(e.position.z,0),this.graphics.scene.add(t)}addAxes(e){e=e||{};const t=new THREE.AxesHelper(this.parseOption(e.size,2));t.name="MainAxesHelper",e.position=e.position||{},t.position.x=this.parseOption(e.position.x,0),t.position.y=this.parseOption(e.position.y,.002),t.position.z=this.parseOption(e.position.z,0),this.graphics.scene.add(t)}parseOption(e,t){return null==e?t:e}}class MaterialUtils{constructor(e){this.graphics=e}enableTransparent(e){e.material.alphaTest=.5,e.material.side=THREE.DoubleSide,e.material.transparent=!0,e.material.opacity=1,e.material.needsUpdate=!0}disableTransparent(e){e.material.alphaTest=0,e.material.side=THREE.DoubleSide,e.material.transparent=!1,e.material.opacity=0,e.material.needsUpdate=!0}changeToDoubleSide(e){return e.side=THREE.DoubleSide,e.needsUpdate,e}changeToFrontSide(e){return e.side=THREE.FrontSide,e.needsUpdate,e}changeToBackSideSide(e){return e.side=THREE.BackSide,e.needsUpdate,e}changeAlphaTestValue(e,t){return e.alphaTest=t,e.needsUpdate,e}changeAlphaValue(e,t){return e.alpha=t,e.needsUpdate,e}}console.log("%cGraphics Engine v0.4 (19 Feb, 2019) loaded","color:#33CC33");class Graphics{constructor(e){this.options=void 0===e?{}:e,this.meshUtils=new MeshUtils(this),this.lightUtils=new HelperUtils(this),this.loaderUtils=new Loader(this),this.helperUtils=new HelperUtils$1(this),this.materialUtils=new MaterialUtils(this),this.stats=[]}init(){return this.options.renderer=this.parseOption(this.options.renderer,{}),this.options.renderer.shadowMap=this.parseOption(this.options.renderer.shadowMap,{}),this.renderer=new THREE.WebGLRenderer({antialias:this.parseOption(this.options.renderer.antialias,!1),alpha:this.parseOption(this.options.renderer.alpha,!1)}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.gammaInput=this.parseOption(this.options.renderer.gammaInput,!1),this.renderer.gammaOutput=this.parseOption(this.options.renderer.gammaOutput,!1),this.renderer.shadowMap.enabled=this.parseOption(this.options.renderer.shadowMap.enabled,!0),this.renderer.shadowMap.soft=this.parseOption(this.options.renderer.shadowMap.soft,!1),this.renderer.shadowMap.type=this.parseOption(this.options.renderer.shadowMap.type,THREE.PCFSoftShadowMap),document.body.appendChild(this.renderer.domElement),this.scene=new THREE.Scene,this.options.camera=this.parseOption(this.options.camera,{}),this.camera=new THREE.PerspectiveCamera(this.options.camera.fov,window.innerWidth/window.innerHeight,this.options.camera.near,this.options.camera.far),this.camera.position.x=this.options.camera.position.x,this.camera.position.y=this.options.camera.position.y,this.camera.position.z=this.options.camera.position.z,this.camera.lookAt(new THREE.Vector3(0,0,0)),this.controls=new OrbitControls(this.camera),this.controls.keys={},window.addEventListener("resize",()=>{this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)},!1),this.addStats(),this}addStats(e){e=e||{};const t=new Stats;t.showPanel(this.parseOption(e.type,0)),document.body.appendChild(t.dom);const s=this.parseOption(e.left,0),i=this.parseOption(e.top,0);return t.dom.style.cssText="position:absolute;left:"+s+"px;top:"+i+"px;cursor:pointer;opacity:0.5;z-index:10000",this.stats.push(t),this}getGroundPlane(){return this.meshUtils.getMeshByName("GroundPlaneStatic")}addGroundPlane(e){if(this.getGroundPlane())return;e=e||{};const t=new THREE.Mesh(new THREE.PlaneBufferGeometry(1500,1500),new THREE.MeshBasicMaterial({color:this.parseOption(e.color,1052688),depthWrite:!1}));return t.name="GroundPlaneStatic",t.rotation.x=-Math.PI/2,t.position.y=-.05,t.receiveShadow=!1,this.scene.add(t),this}removeGroundPlane(){return this.scene.remove(this.getGroundPlane()),this}setSceneType(e,t){if(t=t||{},"fog"==e)t.fog=this.parseOption(t.fog,{}),this.scene.fog||(this.scene.fog=new THREE.Fog(this.parseOption(t.fog.color,13421772)),this.scene.fog.name=this.parseOption(t.fog.name,"__Fog__"),this.scene.background=this.scene.fog.color),this.scene.fog.near=this.parseOption(t.fog.near,5),this.scene.fog.far=this.parseOption(t.fog.far,100),this.scene.background=this.scene.fog.color,this.addGroundPlane();else if("env"===e){t.env=this.parseOption(t.env,{});var s=!1;t.env.cubeTexture&&t.env.cubeTexture instanceof THREE.CubeTexture&&(this.scene.background=t.env.cubeTexture,s=!0),s||this.loaderUtils.loadCubeTexture(this.parseOption(t.env.path,"NO_ENV_PATH_FILE!")).then(e=>{this.scene.background=e})}else t.bkg=this.parseOption(t.bkg,{}),this.scene.background=new THREE.Color(this.parseOption(t.bkg.color,1118481));this.parseOption(t.usePlane,void 0)?this.addGroundPlane():"fog"!==this.options.sceneType&&this.removeGroundPlane(),"fog"!==e&&this.scene.fog&&(this.scene.fog.near=.1,this.scene.fog.far=0)}setEnvMap(e){if(e instanceof THREE.CubeTexture){var t=e;this.meshUtils.applyReflectionMapToAllMeshes(t),this.scene.background=t}else this.loaderUtils.loadCubeTexture(e).then(e=>{this.meshUtils.applyReflectionMapToAllMeshes(e),this.scene.background=e})}update(){return this.controls.update(),this.stats.forEach(e=>{e.update()}),this.renderer.render(this.scene,this.camera),this}parseOption(e,t){return null==e?t:e}}class Debugger{constructor(e,t,s){s=s||{},this.scene=e,this.world=t,this.visibled=!0,this._meshes=[],this._material=new THREE.MeshBasicMaterial({color:s.color||13421568,wireframe:!0}),this._sphereGeometry=new THREE.SphereGeometry(1),this._boxGeometry=new THREE.BoxGeometry(1,1,1),this._planeGeometry=new THREE.PlaneGeometry(10,10,10,10),this._cylinderGeometry=new THREE.CylinderGeometry(1,1,10,10),this.tmpVec0=new CANNON.Vec3,this.tmpVec1=new CANNON.Vec3,this.tmpVec2=new CANNON.Vec3,this.tmpQuat0=new CANNON.Vec3}update(){for(var e=this.world.bodies,t=this._meshes,s=this.tmpVec0,i=this.tmpQuat0,o=0,a=0;a!==e.length;a++)for(var r=e[a],n=0;n!==r.shapes.length;n++){var h=r.shapes[n];this._updateMesh(o,h),(p=t[o])&&(r.quaternion.vmult(r.shapeOffsets[n],s),r.position.vadd(s,s),r.quaternion.mult(r.shapeOrientations[n],i),p.position.copy(s),p.quaternion.copy(i)),o++}for(a=o;a<t.length;a++){var p;(p=t[a])&&this.scene.remove(p)}return t.length=o,this}_updateMesh(e,t){var s=this._meshes[e];this._typeMatch(s,t)||(s&&this.scene.remove(s),s=this._meshes[e]=this._createMesh(t)),this._scaleMesh(s,t)}_typeMatch(e,t){if(!e)return!1;var s=e.geometry;return s instanceof THREE.SphereGeometry&&t instanceof CANNON.Sphere||s instanceof THREE.BoxGeometry&&t instanceof CANNON.Box||s instanceof THREE.PlaneGeometry&&t instanceof CANNON.Plane||s.id===t.geometryId&&t instanceof CANNON.ConvexPolyhedron||s.id===t.geometryId&&t instanceof CANNON.Trimesh||s.id===t.geometryId&&t instanceof CANNON.Heightfield}_createMesh(e){var t,s=this._material;switch(e.type){case CANNON.Shape.types.SPHERE:t=new THREE.Mesh(this._sphereGeometry,s);break;case CANNON.Shape.types.BOX:t=new THREE.Mesh(this._boxGeometry,s);break;case CANNON.Shape.types.PLANE:t=new THREE.Mesh(this._planeGeometry,s);break;case CANNON.Shape.types.CONVEXPOLYHEDRON:for(var i=new THREE.Geometry,o=0;o<e.vertices.length;o++){var a=e.vertices[o];i.vertices.push(new THREE.Vector3(a.x,a.y,a.z))}for(o=0;o<e.faces.length;o++)for(var r=e.faces[o],n=r[0],h=1;h<r.length-1;h++){var p=r[h],c=r[h+1];i.faces.push(new THREE.Face3(n,p,c))}i.computeBoundingSphere(),i.computeFaceNormals(),t=new THREE.Mesh(i,s),e.geometryId=i.id;break;case CANNON.Shape.types.TRIMESH:var l=new THREE.Geometry,d=this.tmpVec0,m=this.tmpVec1,g=this.tmpVec2;for(o=0;o<e.indices.length/3;o++){e.getTriangleVertices(o,d,m,g),l.vertices.push(new THREE.Vector3(d.x,d.y,d.z),new THREE.Vector3(m.x,m.y,m.z),new THREE.Vector3(g.x,g.y,g.z));h=l.vertices.length-3;l.faces.push(new THREE.Face3(h,h+1,h+2))}l.computeBoundingSphere(),l.computeFaceNormals(),t=new THREE.Mesh(l,s),e.geometryId=l.id;break;case CANNON.Shape.types.HEIGHTFIELD:l=new THREE.Geometry,d=this.tmpVec0,m=this.tmpVec1,g=this.tmpVec2;for(var u=0;u<e.data.length-1;u++)for(var w=0;w<e.data[u].length-1;w++)for(var O=0;O<2;O++){e.getConvexTrianglePillar(u,w,0===O),d.copy(e.pillarConvex.vertices[0]),m.copy(e.pillarConvex.vertices[1]),g.copy(e.pillarConvex.vertices[2]),d.vadd(e.pillarOffset,d),m.vadd(e.pillarOffset,m),g.vadd(e.pillarOffset,g),l.vertices.push(new THREE.Vector3(d.x,d.y,d.z),new THREE.Vector3(m.x,m.y,m.z),new THREE.Vector3(g.x,g.y,g.z));o=l.vertices.length-3;l.faces.push(new THREE.Face3(o,o+1,o+2))}l.computeBoundingSphere(),l.computeFaceNormals(),t=new THREE.Mesh(l,s),e.geometryId=l.id}return t&&(t.name="___mesh_debug___"+Math.floor(1e10*Math.random()),this.scene.add(t)),t}_scaleMesh(e,t){switch(t.type){case CANNON.Shape.types.SPHERE:var s=t.radius;e.scale.set(s,s,s);break;case CANNON.Shape.types.BOX:e.scale.copy(t.halfExtents),e.scale.multiplyScalar(2);break;case CANNON.Shape.types.CONVEXPOLYHEDRON:e.scale.set(1,1,1);break;case CANNON.Shape.types.TRIMESH:e.scale.copy(t.scale);break;case CANNON.Shape.types.HEIGHTFIELD:e.scale.set(1,1,1)}}setVisible(e){const t=this;this.visibled=!0===e||!1===e?e:this.visibled,this.scene.traverse(e=>{e instanceof THREE.Mesh&&e.name.includes("___mesh_debug___")&&(e.visible=t.visibled)})}toggleVisible(){this.visibled=!this.visibled,this.setVisible(this.visibled)}}class BodyUtils{constructor(e,t){t=t||{},this.physics=e,this.bodyOffset=this.parseOption(t.bodyOffset,.01)}getBodyByMeshName(e){var t=[],s=this.physics.world.bodies;for(let i=0;i<s.length;i++){const o=s[i];o.threemesh.name.toLowerCase()===e.toLowerCase()&&t.push(o)}return t.length>1&&console.warning("getBodyByMeshName: Found + "+t.length+" bodies. Only the first body is returned"),t[0]}getMeshesFromWorld(){const e=[];return this.physics.world.bodies.forEach(t=>{t.threemesh.traverse(t=>{t instanceof THREE.Mesh&&(t.parent instanceof THREE.Group?e.push(t.parent):e.push(t))})}),e}getBodiesFromWorld(){return this.physics.world.bodies}changeBodyToStatic(e){return e.type=CANNON.Body.STATIC,e.mass=0,e.updateMassProperties(),e.aabbNeedsUpdate=!0,this}getMass(e){const t=e.name.toLowerCase();return t.includes("static")||t.includes("ground")?0:(e.scale.x+e.scale.y+e.scale.z)/3}createBodiesFromScene(e){console.group("createBodiesFromScene()");const t=this;var s=void 0,i=!1,o=0;return e.traverse(e=>{e instanceof THREE.Group?(s=t.createBodyFromMesh(e),i=!0):e instanceof THREE.Mesh&&e.parent instanceof THREE.Scene&&(s=t.createBodyFromMesh(e),i=!0),i&&(s&&(t.physics.world.add(s),console.log("%c"+ ++o+") Rigidbody of "+s.threemesh.name+" ("+e.type+") is created","color:#339922")),i=!1)}),console.groupEnd(),this}createBodyFromMesh(e){const t=this.getMass(e),s=e.name.toLowerCase();return s.includes("cube")||s.includes("box")?this.createBoxBody(e,t):s.includes("plane")?this.createPlaneBody(e,t):s.includes("sphere")||s.includes("icosphere")||s.includes("icosahedron")?this.createSphereBody(e,t):s.includes("cylinder")?this.createCylinderBody(e,t):s.includes("cone")?this.createConeBody(e,t):s.includes("torus")?this.createTorusBody(e,t):void 0}createShapeFromMesh(e){const t=e.name.toLowerCase();return t.includes("cube")||t.includes("box")?this.createBoxShape(e):t.includes("plane")?this.createPlaneShape(e):t.includes("sphere")||t.includes("icosphere")||t.includes("icosahedron")?this.createSphereShape(e):t.includes("cylinder")?this.createCylinderShape(e):t.includes("cone")?this.createConeShape(e):t.includes("torus")?this.createTorusShape(e):void 0}createBoxShape(e){const t=this.bodyOffset,s=new CANNON.Vec3(e.scale.x+t,e.scale.y+t,e.scale.z+t);return new CANNON.Box(s)}createBoxBody(e,t){const s=this.createBoxShape(e),i=new CANNON.Body({mass:t});return i.addShape(s),i.quaternion.copy(e.quaternion),i.position.copy(e.position),i.threemesh=e,i}createPlaneShape(e){const t=this.bodyOffset,s=new CANNON.Vec3(e.scale.x+t,.05+t,e.scale.z+t);return new CANNON.Box(s)}createPlaneBody(e,t){const s=this.createPlaneShape(e),i=new CANNON.Body({mass:t});return i.addShape(s),i.quaternion.copy(e.quaternion),i.position.copy(e.position),i.threemesh=e,i}createSphereShape(e){const t=this.bodyOffset,s=e.scale.x+3*t;return new CANNON.Sphere(s)}createSphereBody(e,t){const s=this.createSphereShape(e),i=new CANNON.Body({mass:t});return i.addShape(s),i.quaternion.copy(e.quaternion),i.position.copy(e.position),i.threemesh=e,i}createCylinderShape(e){const t=this.bodyOffset,s=e.scale.x,i=s,o=2*e.scale.y,a=new CANNON.Cylinder(s+t,i+t,o+t,16);var r=new CANNON.Quaternion;return r.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),a.transformAllPoints(new CANNON.Vec3,r),a}createCylinderBody(e,t){const s=this.createCylinderShape(e),i=new CANNON.Body({mass:t});return i.addShape(s),i.quaternion.copy(e.quaternion),i.position.copy(e.position),i.threemesh=e,i}createConeShape(e){const t=this.bodyOffset,s=e.scale.x,i=2*e.scale.y,o=new CANNON.Cylinder(.001+t,s+t,i+t,16);var a=new CANNON.Quaternion;return a.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),o.transformAllPoints(new CANNON.Vec3,a),o}createConeBody(e,t){const s=this.createConeShape(e),i=new CANNON.Body({mass:t});return i.addShape(s),i.quaternion.copy(e.quaternion),i.position.copy(e.position),i.threemesh=e,i}createTorusShape(e){const t=this.bodyOffset,s=1.25*e.scale.x,i=s,o=.5*e.scale.y,a=new CANNON.Cylinder(s+t,i+t,o+t,16);var r=new CANNON.Quaternion;return r.setFromAxisAngle(new CANNON.Vec3(1,0,0),-Math.PI/2),a.transformAllPoints(new CANNON.Vec3,r),a}createTorusBody(e,t){const s=this.createTorusShape(e),i=new CANNON.Body({mass:t});return i.addShape(s),i.quaternion.copy(e.quaternion),i.position.copy(e.position),i.threemesh=e,i}createGroundMaterial(e,t){var s=new CANNON.Material("__physicGroundMaterial"),i=new CANNON.ContactMaterial(s,s,{friction:null!=e?e:.4,restitution:null!=t?t:0});return this.physics.world.addContactMaterial(i),s}createObjectMaterial(e,t,s){var i=new CANNON.Material("__physicObjectMaterial"),o=new CANNON.ContactMaterial(s,i,{friction:null!=e?e:0,restitution:null!=t?t:.9});return this.physics.world.addContactMaterial(o),i}parseOption(e,t){return null==e?t:e}}console.log("%cPhysics Engine  v0.4 (19 Feb, 2019) loaded","color:#33CC33");class Physics{constructor(e,t){this.graphics=e,this.debugRenderer=void 0,this.options=this.parseOption(t,{}),this.options.solver=this.parseOption(t.solver,{}),this.options.solver.iterations=this.parseOption(this.options.solver.iterations,10),this.options.solver.tolerance=this.parseOption(this.options.solver.tolerance,1e-6),this.options.useDebug=this.parseOption(t.useDebug,!0),this.options.debugColor=this.parseOption(t.debugColor,3407667),this.options.bodyOffset=this.parseOption(t.bodyOffset,.01),this.options.allowSleep=this.parseOption(t.allowSleep,!0),this.options.timeStep=this.parseOption(t.timeStep,"dt"),this.options.gravity=this.parseOption(t.gravity,new CANNON.Vec3(0,-9.8,0)),this.timeStep=this.options.timeStep,this.gravity=this.options.gravity,this.bodyUtils=new BodyUtils(this,this.options),this.enabled=!0}init(){this.world=new CANNON.World,this.world.gravity=this.gravity,this.world.broadphase=new CANNON.NaiveBroadphase,this.world.broadphase.useBoundingBoxes=!0,this.world.allowSleep=this.options.allowSleep,this.world.quatNormalizeFast=!0,this.world.quatNormalizeSkip=0,this.world.defaultContactMaterial.contactEquationStiffness=1e7,this.world.defaultContactMaterial.contactEquationRelaxation=5;const e=new CANNON.GSSolver;return this.parseOption(this.options.solver.split,!0)?this.world.solver=new CANNON.SplitSolver(e):this.world.solver=e,this.world.solver.iterations=this.parseOption(this.options.solver.iterations,10),this.world.solver.tolerance=this.parseOption(this.options.solver.tolerance,1e-6),this.debugRenderer=new Debugger(this.graphics.scene,this.world,{color:this.options.debugColor}),this}update(e){if(!1===this.enabled)return this;if(e=void 0===e?1/60:e,"dt"===this.timeStep){var t=e/1e3;t>.2&&(console.log("%cThe dt="+t+" > 0.200 seconds. It is changed to "+(1/60).toFixed(2),"color:#885511"),t=1/60),this.world.step(t)}else this.world.step(this.timeStep);var s=[];if(this.world.bodies.forEach(e=>{null!=e.threemesh&&(e.threemesh.position.copy(e.position),e.threemesh.quaternion.copy(e.quaternion),e.position.y<-100&&s.push(e))}),this.options.useDebug&&this.debugRenderer.update(),s.length>0){for(var i=null,o=0;o<this.graphics.scene.children.length;o++){var a=this.graphics.scene.children[o];if(a instanceof THREE.Scene){i=a;break}}i||(i=this.graphics.scene),s.forEach(e=>{this.world.remove(e),i.remove(e.threemesh),console.log("%cThe "+e.threemesh.name+" is removed","color:#883333")})}return this}start(){return this.enabled=!0,this}stop(){return this.enabled=!1,this}enebleProfiling(e){return this.world.doProfiling=e,this}getProfiling(){return this.world.profile}parseOption(e,t){return null==e?t:e}}class KeyEvent{constructor(e){this.down=!1,this.key=e,this.keyCode=void 0,this.target=void 0,this.shift=!1,this.ctrl=!1,this.alt=!1,this.repeat=!1,this.timeOld=performance.now(),this.timeNew=0,this.timeDif=0,this.timeSum=0}}class Keyboard{constructor(e,t){this.options=t||{},this.downTicks=0,this.callback=e||null,this.event=new KeyEvent(""),this.keyDownList=[],document.addEventListener("keydown",e=>{var t=!1;for(let s=0;s<this.keyDownList.length;s++)if(this.keyDownList[s].key===e.key){t=!0;break}if(!t){var s=new KeyEvent(e.key);_updateParams(s,e,!0),this.keyDownList.push(s)}this.callback&&(_updateParams(this.event,e,!0),this.callback(this.event))}),document.addEventListener("keyup",e=>{this.downTicks=0;var t=-1;for(let s=0;s<this.keyDownList.length;s++)if(this.keyDownList[s].key===e.key){t=s;break}t>=0&&this.keyDownList.splice(t,1),this.callback&&(_updateParams(this.event,e,!1),this.callback(this.event))})}setCallback(e){this.callback=e}getKeyDown(e,t){for(let o=0;o<this.keyDownList.length;o++){var s=this.keyDownList[o];if(s.key===e){if(0==this.downTicks)return this.downTicks++,!0;if(t){var i=Number(performance.now()-s.timeNew);return Number(i)>Number(t)&&(s.timeNew=performance.now(),!0)}return!0}}return!1}}function _updateParams(e,t,s){e.down=s,e.key=t.key,e.keyCode=t.keyCode,e.shift=t.shiftKey,e.ctrl=t.ctrlKey,e.alt=t.altKey,e.repeat=t.repeat,e.target=t.target,e.timeOld=e.timeNew,e.timeNew=performance.now(),e.timeDif=s?e.timeNew-e.timeOld:0,e.timeSum=s?e.timeSum+e.timeDif:0}var Options={physics:{enabled:!0,useDebug:!1,debugColor:16776960,bodyOffset:.01},graphics:{sceneType:"env",useReflection:!0,fog:{color:8947848,near:50,far:200},env:{path:"./images/Park2"},bkg:{color:1114112},models:["./models/default"],camera:{fov:75,near:.1,far:1e3,position:{x:10,y:5,z:20}},renderer:{antialias:!1,alpha:!1,gammaInput:!0,gammaOutput:!0,shadowMap:{enabled:!0,soft:!0,type:THREE.PCFSoftShadowMap}},directionalLight:{enabled:!0,useHelper:!1,color:16777215,intensity:2,castShadow:!0,position:{x:20,y:20,z:10},shadow:{bias:0,mapSize:{width:512,height:512},camera:{visible:!0,near:.5,far:1e3,top:10,bottom:-10,right:10,left:-10}}},spotLight:{enabled:!1,useHelper:!0,color:16777215,intensity:5,castShadow:!0,distance:100,decay:2,angle:Math.PI/8,penumbra:.8,position:{x:10,y:20,z:10},shadow:{bias:0,mapSize:{width:1024,height:1024},camera:{visible:!0,Fov:90,near:.5,far:1e3}}},pointLight:{enabled:!1,useHelper:!1,color:16777215,intensity:1,castShadow:!0,distance:50,decay:2,position:{x:8,y:10,z:-5},shadow:{bias:0,mapSize:{width:512,height:512},camera:{visible:!0,Fov:90,near:.5,far:1e3}}},ambientLight:{enabled:!0,color:16772812,intensity:1},grids:{enabled:!0,size:40,divisions:40,colorCenterLine:2236962,colorGrid:1118481,position:{x:0,y:.01,z:0}},axes:{enabled:!0,size:4,position:{x:0,y:.002,z:0}}}};console.log("%cECC-CGP-Engine  v0.4 (19 Feb, 2019) loaded","color:#33CC33");class engine{constructor(e){this.options=this.parseOption(e,Options),this.keyboard=new Keyboard,this.options.graphics=this.parseOption(this.options.graphics,{}),this.options.graphics.sceneType=this.parseOption(this.options.graphics.sceneType,Options.graphics.sceneType),this.options.graphics.env=this.parseOption(this.options.graphics.env,{}),this.options.graphics.env.path=this.parseOption(this.options.graphics.env.path,Options.graphics.env.path),this.options.graphics.useReflection=this.parseOption(this.options.graphics.useReflection,Options.graphics.useReflection),this.options.graphics.camera=this.parseOption(this.options.graphics.camera,Options.graphics.camera),this.options.graphics.renderer=this.parseOption(this.options.graphics.renderer,Options.graphics.renderer),this.options.physics=this.parseOption(this.options.physics,{}),this.options.physics.enabled=this.parseOption(this.options.physics.enabled,Options.physics.enabled),this.options.physics.useDebug=this.parseOption(this.options.physics.useDebug,Options.physics.useDebug),this.options.physics.debugColor=this.parseOption(this.options.physics.debugColor,Options.physics.debugColor),this.options.physics.bodyOffset=this.parseOption(this.options.physics.bodyOffset,Options.physics.bodyOffset),this.graphics=new Graphics(this.options.graphics),this.physics=new Physics(this.graphics,this.options.physics),this.graphics.init(),this.physics.init(),this.enabled=!0,this.reqAmtId=void 0,this.callback=null,this.params={dt:0,curTime:performance.now(),prvTime:performance.now(),renderingTime:0,processingTime:0,graphicsTime:0,physicsTime:0,frameCnt:0}}init(e,t){e&&"function"==typeof e&&(t=e,e=void 0),(e=this.parseOption(e,{})).envPath=this.parseOption(e.envPath,this.graphics.options.env.path),e.models=this.parseOption(e.models,void 0);const s=this;return new Promise((i,o)=>{console.group("%cEngine.Init","color:#3355cc"),s.graphics.loaderUtils.loadCubeTexture(e.envPath).then(o=>{if(o&&console.log('%cThe env texture "'+e.envPath+'" is loaded',"color:#3355cc"),e.models){var a=0,r=e.models.length,n=[];e.models.forEach(e=>{s.graphics.loaderUtils.loadGLTF(e).then(h=>{if(console.log('%cThe GLTF model "'+e+'" is loaded',"color:#3355cc"),s.graphics.scene.add(h.scene),++a>=r){var p={graphics:s.graphics,physics:s.physics,scenes:n,envTexture:o};console.groupEnd(),i(p),t&&t(p),this.initDefaultScene(o)}})})}else{var h={graphics:s.graphics,physics:s.physics,scenes:n,envTexture:o};console.groupEnd(),i(h),t&&t(h),this.initDefaultScene(o)}})})}initDefaultScene(e){this.graphics.options.ambientLight=this.parseOption(this.graphics.options.ambientLight,Options.graphics.ambientLight),this.graphics.options.ambientLight.enabled&&this.graphics.lightUtils.addAmbientLight(this.graphics.options.ambientLight),this.graphics.options.pointLight=this.parseOption(this.graphics.options.pointLight,Options.graphics.pointLight),this.graphics.options.pointLight.enabled&&this.graphics.lightUtils.addPointLight(this.graphics.options.pointLight),this.graphics.options.spotLight=this.parseOption(this.graphics.options.spotLight,Options.graphics.spotLight),this.graphics.options.spotLight.enabled&&this.graphics.lightUtils.addSpotLight(this.graphics.options.spotLight),this.graphics.options.directionalLight=this.parseOption(this.graphics.options.directionalLight,Options.graphics.directionalLight),this.graphics.options.directionalLight.enabled&&this.graphics.lightUtils.addDirectionalLight(this.graphics.options.directionalLight),this.graphics.options.grids=this.parseOption(this.graphics.options.grids,Options.graphics.grids),this.graphics.options.grids.enables&&this.graphics.helperUtils.addGrids(this.graphics.options.grids),this.graphics.options.axes=this.parseOption(this.graphics.options.axes,Options.graphics.axes),this.graphics.options.axes.enabled&&this.graphics.helperUtils.addAxes(this.graphics.options.axes),this.options.graphics.env=this.parseOption(this.options.graphics.env,{}),this.options.graphics.env.path=this.parseOption(this.options.graphics.env.path,"./images/Bridge2"),this.options.graphics.env.cubeTexture=e,this.graphics.setSceneType(this.options.graphics.sceneType,this.options.graphics),this.options.graphics.useReflection&&(e?this.graphics.meshUtils.applyReflectionMapToAllMeshes(e):(this.options.graphics.env.path=this.parseOption(this.options.graphics.env.path,Options.graphics.env.path),this.graphics.loaderUtils.loadCubeTexture(this.options.graphics.env.path).then(e=>{this.graphics.meshUtils.applyReflectionMapToAllMeshes(e)}))),this.physics.bodyUtils.createBodiesFromScene(this.graphics.scene),console.group("%cEngine Options","color:blue"),console.group("%cGraphics Options","color:#0055AA"),console.dir(this.graphics.options),console.groupEnd(),console.group("%cPhysics Options","color:orange"),console.dir(this.physics.options),console.groupEnd(),console.group("%cDefault Options","color:#999999"),console.dir(Options),console.groupEnd(),console.groupEnd()}update(){if(!0===this.enabled){if(window.requestAnimationFrame(this.update.bind(this)),this.params.curTime=performance.now(),this.params.renderingTime=1e3*(this.params.curTime-this.params.prvTime),this.params.dt=this.params.curTime-this.params.prvTime,!0===this.options.physics.enabled){const e=performance.now();this.physics.update(this.params.dt),this.params.physicsTime=1e3*(performance.now()-e)}const e=performance.now();this.graphics.update(),this.params.graphicsTime=1e3*(performance.now()-e),this.params.frameCnt++,this.params.processingTime=1e3*(performance.now()-this.params.curTime),this.callback&&this.callback(this.params),this.params.prvTime=this.params.curTime}return this}start(e){return this.enabled=!0,this.callback=e,requestAnimationFrame(this.update.bind(this)),this}stop(){return this.enabled=!1,this}print(e,t){var s="#000000";switch(t){case"info":s="#3333AA";break;case"success":s="#33AA33";break;case"danger":s="#AA3333";break;case"warning":s="#AAAA33";break;case"primary":s="#333388";break;default:s=t}return console.log("%c"+e,"color:"+s),this}on(e,t){return window.addEventListener(e,e=>{e.preventDefault(),e.stopPropagation(),t(e)}),this}parseOption(e,t){return null==e?t:e}}class RayCast{constructor(e,t){this.graphics=e,this.physics=t,this.callback=null,this.meshes=[],this.raycaster=new THREE.Raycaster}doRayCast(e){const t=new THREE.Vector2;t.x=+e.clientX/this.graphics.renderer.domElement.clientWidth*2-1,t.y=-e.clientY/this.graphics.renderer.domElement.clientHeight*2+1,this.meshes.length<1&&(this.meshes=this.getMeshesFromScene());var s=[];if(this.meshes.length>1){this.raycaster.setFromCamera(t,this.graphics.camera);let e=this.raycaster.intersectObjects(this.meshes);console.group("RayCast.doRayCast"),console.dir(this.raycaster);for(let t=0;t<e.length;t++){const i=e[t].object;console.dir(e[t]),i.parent instanceof THREE.Group?s.push({mesh:i.parent,intersect:e[t],ray:this.raycaster.ray}):s.push({mesh:i,intersect:e[t],ray:this.raycaster.ray})}console.groupEnd()}return s}updateScene(){this.meshes=getMeshesFromScene()}getMeshesFromScene(e){const t=e||this.graphics.scene,s=this.meshes;return t.traverse(e=>{e instanceof THREE.Mesh&&e.name&&s.push(e)}),this.meshes}getMeshesFromWorld(e){const t=e||this.physics.world,s=this.meshes;return t.bodies.forEach(e=>{e.threemesh.traverse(e=>{e instanceof THREE.Mesh&&e.name&&s.push(e)})}),this.meshes}}exports.CANNON=CANNON,exports.THREE=THREE,exports.Engine=engine,exports.RayCast=RayCast,exports.Graphics=Graphics,exports.Physics=Physics,exports.Keyboard=Keyboard,exports.Options=Options;